/* Generated By:JJTree&JavaCC: Do not edit this line. DungeonCompiladorConstants.java */
package source;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface DungeonCompiladorConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INICIAPROG = 5;
  /** RegularExpression Id. */
  int ABREBLOCO = 6;
  /** RegularExpression Id. */
  int FECHABLOCO = 7;
  /** RegularExpression Id. */
  int FIMINST = 8;
  /** RegularExpression Id. */
  int IF = 9;
  /** RegularExpression Id. */
  int THEN = 10;
  /** RegularExpression Id. */
  int ELSE = 11;
  /** RegularExpression Id. */
  int END = 12;
  /** RegularExpression Id. */
  int WHILE = 13;
  /** RegularExpression Id. */
  int DO = 14;
  /** RegularExpression Id. */
  int UNTIL = 15;
  /** RegularExpression Id. */
  int TIPOINT = 16;
  /** RegularExpression Id. */
  int TIPOFLOAT = 17;
  /** RegularExpression Id. */
  int TIPOBOL = 18;
  /** RegularExpression Id. */
  int TIPOCHAR = 19;
  /** RegularExpression Id. */
  int ASSIGN = 20;
  /** RegularExpression Id. */
  int PLUS = 21;
  /** RegularExpression Id. */
  int MINUS = 22;
  /** RegularExpression Id. */
  int TIMES = 23;
  /** RegularExpression Id. */
  int DIV = 24;
  /** RegularExpression Id. */
  int EQ = 25;
  /** RegularExpression Id. */
  int NE = 26;
  /** RegularExpression Id. */
  int GT = 27;
  /** RegularExpression Id. */
  int GE = 28;
  /** RegularExpression Id. */
  int LT = 29;
  /** RegularExpression Id. */
  int LE = 30;
  /** RegularExpression Id. */
  int ANDBOOL = 31;
  /** RegularExpression Id. */
  int ORBOOL = 32;
  /** RegularExpression Id. */
  int NOTBOOL = 33;
  /** RegularExpression Id. */
  int INT_LIT = 34;
  /** RegularExpression Id. */
  int FLOAT_LIT = 35;
  /** RegularExpression Id. */
  int BOOL_LIT = 36;
  /** RegularExpression Id. */
  int CHAR_LIT = 37;
  /** RegularExpression Id. */
  int IDENT = 38;
  /** RegularExpression Id. */
  int LETTER = 39;
  /** RegularExpression Id. */
  int DIGIT = 40;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "\"campanha\"",
    "\"mesa\"",
    "\"e_eh_aqui\"",
    "\"fim_de_turno\"",
    "\"rola_um_dado_ai\"",
    "\"acerta\"",
    "\"erra\"",
    "\"long_rest\"",
    "\"iniciativa\"",
    "\"sua_vez\"",
    "\"vez_do_monstro\"",
    "\"forca\"",
    "\"destreza\"",
    "\"inteligencia\"",
    "\"sabedoria\"",
    "\"recebe\"",
    "\"buff\"",
    "\"debuff\"",
    "\"crit\"",
    "\"partilha\"",
    "\"==\"",
    "\"!=\"",
    "\">\"",
    "\">=\"",
    "\"<\"",
    "\"<=\"",
    "\"&&\"",
    "\"||\"",
    "\"!\"",
    "<INT_LIT>",
    "<FLOAT_LIT>",
    "<BOOL_LIT>",
    "<CHAR_LIT>",
    "<IDENT>",
    "<LETTER>",
    "<DIGIT>",
    "\"(\"",
    "\")\"",
  };

}
